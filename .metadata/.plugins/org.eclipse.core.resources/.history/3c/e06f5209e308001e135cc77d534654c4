package com.rgt.training.session4;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;

public class ListComparision {

	
	CompareAddition(numberOfElements);
	compareGet(numberofElements, numberOfOperations);
	compareInsertion(numberofElements, numberOfOperations);
	compareDeletion(numberofElements, numberOfOperations);
	
	
	public void compareAddition(int numberOfElements) {
		
		List<Double>arraylist=new ArrayList<>();
		List<Double>linkedlist=new LinkedList<>();
		
		long startTime= System.currentTimeMillis();
		for(int i=0; i<100000; i++) {
			arraylist.add((double) i);
		}
		long arrayListTime= System.currentTimeMillis()-startTime;
		
		 startTime= System.currentTimeMillis();
		for(int i=0; i<100000; i++) {
			linkedlist.add((double) i);
		}
		long linkedListTime= System.currentTimeMillis()-startTime;
		System.out.printf("Addition: Arraylist= %d ns, Linkedlist= %d ns\n", arrayListTime,linkedListTime );
	}
	
	public void compareGet(int numberOfElements, int numberOfOperations) {
		List<Double>arraylist=new ArrayList<>(numberOfElements);
		List<Double>linkedlist=new LinkedList<>();
		
		for(int i=0; i<100000; i++) {
			arraylist.add((double) i);
			linkedlist.add((double) i);
		}
		
		long startTime= System.currentTimeMillis();
		for(int i=0; i<numberOfOperations; i++) {
			double index= (double) (Math.random() * numberOfOperations);
			arraylist.get((int) index);
		}
		long arrayListTime= System.currentTimeMillis()-startTime;
		
		 startTime= System.currentTimeMillis();
		for(int i=0; i<numberOfOperations; i++) {
			double index= (double) (Math.random() * numberOfOperations);
			linkedlist.get((int) index);
		}
	long linkedListTime= System.currentTimeMillis()-startTime;
	System.out.printf("Get: Arraylist= %d ns, Linkedlist= %d ns\n", arrayListTime,linkedListTime );
	}
	
	public void comapreInsertion(int numberOfElements, int numberOfOperations) {
		
		List<Double>arraylist=new ArrayList<>(numberOfElements);
		List<Double>linkedlist=new LinkedList<>();
		
		for(int i=0; i<100000; i++) {
			arraylist.add((double) i);
			linkedlist.add((double) i);
		}
		
		long startTime=System.currentTimeMillis();
		for(int i=0; i<numberOfOperations; i++) {
			
			double index= (double) (Math.random() * numberOfOperations);
			arraylist.add((int)index, (double) i);
		}
		long arrayListTime= System.currentTimeMillis()-startTime;
		
		 startTime= System.currentTimeMillis();
		for(int i=0; i<numberOfOperations; i++) {
			double index= (double) (Math.random() * numberOfOperations);
			linkedlist.get((int) index);
		}
	long linkedListTime= System.currentTimeMillis()-startTime;
	System.out.printf("Get: Arraylist= %d ns, Linkedlist= %d ns\n", arrayListTime,linkedListTime );		
		
	}
}
