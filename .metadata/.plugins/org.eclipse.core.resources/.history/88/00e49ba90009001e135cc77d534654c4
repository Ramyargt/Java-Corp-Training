package com.rgt.training.session3;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {

		Scanner sc = new Scanner(System.in);
		int choice;
		String vehicle_Name;
		String license;
		String make;
		String model;
		String vehicleID;
		//Car car1 ;
		MotorCycle motorcycle1;
		Bicycle bicycle1 ;
		RentalService rentalservice= new RentalService();
		Customer customer1 = new Customer();
		
		do {
			System.out.println("Welcome to Vehicle rental system - Menu");
			System.out.println("1.Add Vehicle");
			System.out.println("2.List Available vehicles");
			System.out.println("3.Rent a Vehicle");
			System.out.println("4.Calculate rental cost");
			System.out.println("5.Return vehicle");
			System.out.println("6.Quit");
			System.out.println("Enter your choice: ");
			choice = sc.nextInt();
			// Rental rental1;
			switch (choice) {

			case 1:
				Car car1 = new Car("ABC123", "Toyota", "Camry","1234");
		         motorcycle1 = new MotorCycle("DEF456", "Honda", "CBR500R","120");
		         bicycle1 = new Bicycle("GHI789", "Trek", "Mountain Bike","20");
		         Vehicle vehicles;
		         System.out.println("Enter Vehicle type: ");
		         String v_Type= sc.next();
		        System.out.println("Enter vehicle licensePlate: ");
				license = sc.next();
				System.out.println("Enter vehicle made by: ");
				make = sc.next();
				System.out.println("Enter vehicle model: ");
				model = sc.next();
				System.out.println("Enter vehcile ID: ");
				vehicleID= sc.next();
				System.out.println("");
				
		         if(v_Type.equalsIgnoreCase("car")) {
		        	 vehicles= new Car(license,make,model,vehicleID);
		         }
		         else if(v_Type.equalsIgnoreCase("motor cycle")) {
		        	 vehicles=new MotorCycle(license, make, model, vehicleID);
		         }
		         else if(v_Type.equalsIgnoreCase("Bicycle")) {
		        	 vehicles=new Bicycle(license, make, model, vehicleID); 
		         }
				 rentalservice.addVehicle(car1);
			        rentalservice.addVehicle(motorcycle1);
			        rentalservice.addVehicle(bicycle1);

				break;

			case 2:
				System.out.println("Available vehicles list is ");
				List<Vehicle> availableVehicles = rentalservice.getAvailableVehicles();
		        System.out.println("Available vehicles:");
		        for (Vehicle vehicle : availableVehicles) {
		            System.out.println(vehicle.getLicensePlate() + " - " + vehicle.getMake() + " " + vehicle.getModel());
		        }
				break;

			case 3:
				System.out.println("Enter Vehicle name for Rental");
				vehicle_Name = sc.next();
				 LocalDateTime startTime = LocalDateTime.of(2023, 6, 1, 9, 0);
			        LocalDateTime endTime = LocalDateTime.of(2023, 6, 1, 12, 0);
			        Rental    rental1 = rentalservice.rentVehicle(customer1, car1, startTime, endTime);
			        if (rental1 != null) {
			            System.out.println("Rental successful:");
			            System.out.println("Vehicle: " + rental1.getRentedVehicle().getLicensePlate());
			            System.out.println("Customer: " + rental1.getCustomer().getFirstName() + " " + rental1.getCustomer().getLastName());
			            System.out.println("Start Time: " + rental1.getStartTime());
			            System.out.println("End Time: " + rental1.getEndTime());
			        } else {
			            System.out.println("Vehicle is not available for rent.");
			        }
				//rentalservice.rentVehicle("","",10 ,12);
				break;

			case 4:
				System.out.println("Rental cost for vehicle is : ");
				BigDecimal rentalCost = rentalservice.calculateRentalCost(rental1);
		        System.out.println("Rental Cost: $" + rentalCost);
				break;

			case 5:
				System.out.println("Enter Vehicle name to return");
				vehicle_Name = sc.next();
				boolean returned = rentalservice.returnVehicle(rental1);
		        if (returned) {
		            System.out.println("Vehicle returned successfully.");
		        } else {
		            System.out.println("Failed to return the vehicle.");
		        }
				break;

			case 6:
				System.out.println("Thank you ---");
				break;

			default:
				System.out.println("Enter valid choice-----");
			}
			System.out.println();
		} while (choice != 6);
		sc.close();
	}

}
