package com.rgt.training.session5;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Scanner;

public class RGTMessaging {

	
	HashMap<String, Users> users=  new HashMap<>();
	List<String> tweets  = new ArrayList<>();
	Users user;
	public static boolean status = true;

	public boolean register(String username, Users user) {

		if (users.containsKey(username)) {
			System.out.println("User already Registered, please do Login");
		} else if (!users.containsKey(username)) {
			users.put(username, user);
			System.out.println("User Registered successfull");
			users = new HashMap<>();
			users.put(username, user);
		} else {
			System.out.println("Please register with valid credentails---");
			status = false;
		}
		return status;
	}

	public  void logIn(String uname, String pwd) {
		if (users.containsKey(uname)) {
			System.out.println("User logged in successfull------");
			welcome (uname);
		} else {
			System.out.println("Invalid credentials, please try again");
		}
	}

	public  void welcome(String username) {
		int choice = 0;
		Scanner sc= new Scanner(System.in);
		do {
			System.out.println("-------------------------------------------");
			System.out.println("Welcome " + username);
			System.out.println("1. Post a Tweet");
			System.out.println("2. View your TimeLine");
			System.out.println("3. Search for Users");
			System.out.println("4. Search for tweets");
			System.out.println("5. View your Profile");
			System.out.println("6. LogOut");

			System.out.println("Enter your choice: ");
			 choice = sc.nextInt();
			switch (choice) {
			case 1:
				System.out.println("Enter tweet message");
				String message=sc.next();
				Users.postTweet( message, username);
				
				tweets.add(message+"_"+username);
				break;

			case 2:
				System.out.println("View your Timeline");
				System.out.println("Users availble are: "+ users );
				break;

			case 3:
				System.out.println("Searching for Users");
				System.out.println("Enter friend username to search-----");
				String frienduname= sc.next();
				if(users.containsKey(frienduname)) {
					System.out.println("Display user-friend details: "+ users.get(frienduname));
				}
				else {
					System.out.println("Friend not found-----");
				}
				break;

			case 4:
				System.out.println();
				break;

			case 5:
				System.out.println();
				break;

			case 6:
				logOut();
				break;

			default:
				System.out.println("Please enter valid choice");
			}

		} while (choice != 3);

	}

	public static void logOut() {
		System.out.println("User logged out successfull--------");
	}

	public void searchUser() {

	}

	public void searchTweet() {

	}

	public void getTimeline() {

	}

	public void getProfile() {

	}
}
